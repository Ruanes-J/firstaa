<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.member.mappers.member">

	
<!--  사용자 등록 -->
<update id="mbrInfoRegister" parameterType="kr.member.domain.MemberVO">
   update tbl_member set userpasswd = #{userpasswd}, username = #{username}, authority_code = '02', 
   	telno = #{telno}, email = #{email}, regiDate = #{regiDate}, pwModiDate = #{regiDate} where userid = #{userid}
</update>

<!-- 사용자 사진 등록 -->
<update id="mbrPhotoRegister" parameterType="hashMap" >
	insert into tbl_member (userid, img_org_file, img_stored_file, img_size) values 
		(#{userid}, #{org_file_name}, #{stored_file_name}, #{file_size})
</update>

<!-- 사용자 사진 변경 -->
<update id="mbrPhotoModify" parameterType="hashMap">
   update tbl_member set img_org_file = #{org_file_name}, img_stored_file = #{stored_file_name}, img_size = #{file_size} 
    	where userid = #{userid}
</update>

<!-- 사용자 로그인 정보 등록 -->
<update id="mbrLoginInfo" parameterType="hashMap">
	update tbl_member set lastLoginDate = #{lastLoginDate} where userid = #{userid}
</update>

<!-- 관리자용 사용정보 리스트 보기 -->
<select id="mbrInfoList" resultType="kr.member.domain.MemberVO">	
	SELECT @seq:=@seq+1 as seq, userid, username, regiDate, lastLoginDate FROM 
		(select @seq:=0) a, tbl_member b order by username
</select>

<!-- 사용자 정보 조회 -->
<select id="mbrInfoView" parameterType="string" resultType="kr.member.domain.MemberVO">
	select username, userpasswd, authority_code, telno, email, regiDate, lastLoginDate, pwModiDate, img_stored_file 
 		from tbl_member where userid = #{userid}   
</select>

<!-- 사용자 정보 수정 -->
<update id="mbrInfoModify" parameterType="kr.member.domain.MemberVO" >
 update tbl_member set telno = #{telno}, email = #{email} where userid = #{userid}
</update>

<!-- 사용자 암호 수정 -->
<update id="passwdModify" parameterType="kr.member.domain.MemberVO" >
 update tbl_member set userpasswd = #{userpasswd} where userid = #{userid}
</update>

<!-- 사용자 암호 수정일 등록 -->
<update id="passwdModiDate" parameterType="kr.member.domain.MemberVO" >
	update tbl_member set pwModiDate = #{pwModiDate} where userid = #{userid}
</update>

<!-- 회원탈퇴 시 사용자 개인정보, 등록한 게시물 정보 전체 삭제 -->
<delete id="mbrInfoDelete" parameterType="string">
  delete a,b from tbl_board a join tbl_member b on a.userid = b.userid where b.userid = #{userid}
</delete>

<!-- 회원 탈퇴 시 사용자 업로드한 파일정보 수정 : tbl_file 내 fileCheck를 N으로 변경 -->
<update id="mbrFileCheck" parameterType="string">
	update tbl_file set fileCheck = 'N' where userid = #{userid}
</update>

<!-- 회원 탈퇴시 사용자가 등록한 댓글 전체 삭제 -->
<delete id="mbrDeleteReplyList" parameterType="string">
	delete from tbl_reply where userid = #{userid}
</delete>

<!-- 로그인 -->
<select id="loginCheck" parameterType="hashMap" resultType="kr.member.domain.MemberVO">
    select userid, username, userpasswd, authority_code from tbl_member where userid = #{userid}
</select>

<!-- 아이디 중복 체크 -->
<select id="idCheck" resultType="int">
    select count(*) from tbl_member where userid = #{userid}
</select>

</mapper>